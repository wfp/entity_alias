<?php

/**
 * @file
 * Smart Alias module which takes care of redirecting to aliased path.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function smart_alias_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.smart_alias') {
    $output = '<p>' . t('Redirect entities to their alias with pending node ID.') . '</p>';
    return $output;
  }
}

/**
 * Implements hook_node_insert().
 */
function smart_alias_node_insert(EntityInterface $node) {
  $types = \Drupal::config('smart_alias.settings')->get('entity_types');
  $entity_type = $node->getType();
  if (isset($types[$entity_type]) && $types[$entity_type]['enabled']) {
    $redirect = new RedirectResponse($node->label() . '-' . $node->id());
    $redirect->send();
  }
}

/**
 * Implements hook_alias_menu_local_tasks_alter().
 */
function smart_alias_menu_local_tasks_alter(&$data, $route_name) {
  if(isset($data['tabs'][0]['pathauto.patterns.form'])) {
    $data['tabs'][0]['pathauto.smart_alias'] = [
      '#theme' => 'menu_local_task',
      '#link' => [
        'title' => 'Smart alias',
        'url' => Url::fromRoute('smart_alias.settings'),
      ],
      '#weight' => 50,
    ];
  }
}

/**
 * Implements hook_form_alter().
 */
function smart_alias_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'pathauto_pattern_form': {
      $types = \Drupal::config('smart_alias.settings')->get('entity_types');
      foreach($types as $type) {
        if ($type['enabled']) {
          $form['pattern_container']['bundles']['#options'][$type['entity_type']] .= ' - ' . t('<strong>configured to use Entity Alias</strong>');
        }
      }
    }
  }
}
